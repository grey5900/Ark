/**
 * Created by isaac on 16/7/25.
 */
var fs = require('fs');
var fse = require('fs-extra');
var path = require('path');

function _loopOnPlugins(pluginRoot, looperFunc) {
  if (typeof looperFunc === 'function') {
    const folders = fs.readdirSync(pluginRoot);
    folders.forEach((folderName) => {
      const pathLooper = path.join(pluginRoot, folderName);
      const stats = fs.lstatSync(pathLooper);
      // is a plugin folder
      if (stats.isDirectory()) {
        const pluginConfigPath = path.join(pathLooper, 'plugin.json');
        const pluginConfig = fse.readJsonSync(pluginConfigPath);
        if (pluginConfig) {
          looperFunc(pluginConfig, pathLooper);
        } else {
          console.log('[plugin]: fail to read plugin.json', pluginConfigPath);
        }
      } else {
        console.log('[plugin]: ignore file', pathLooper);
      }
    });
  }
}

function generatePluginLoaderJS(pluginRoot) {
  // clean up `index.js' under plugin folder
  //
  const lines = [];
  lines.push(`/* DO NOT EDIT THIS FILE, GENERATED BY CODE */`);
  _loopOnPlugins(({name, main, enabled}) => {
    // only import `enabled' plugins
    if (enabled) {
      lines.push(`require('./${name}/${main}');`);
    }
  });
  lines.push('require(\'./end\');\n');
  const str = lines.join('\n');
  const loaderPath = path.join(pluginRoot, 'index.js');
  fse.outputFile(loaderPath, str, (error) => {
    console.log(error);
  });
}

module.exports = {
  generatePluginLoaderJS: generatePluginLoaderJS
};
